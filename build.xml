<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="Diagnostics" default="all" 
    xmlns:if="ant:if"
    xmlns:unless="ant:unless">
    
    <description>
        diagnostics/build.xml
        
        ANT FILE FOR TEI PROJECT DIAGNOSTICS.
        
        See diagnostics/README.txt for instructions
        on how to run this diagnostics suite.
        
        Note that this assume oXygen version 17.0 or
        higher. 
        [[Other descriptive things go here]]
    </description>
    
    <property name="echo.separator" value="*********************************************"/>
    
    <tstamp>
        <format property="date" pattern="yyyy-MM-dd" locale="en"/>
    </tstamp>
    
    <condition property="isWindows" value="true">
        <os family="windows"/>
    </condition>
    
    <condition property="isUnix">
        <os family="unix" />
    </condition>
    
    <property name="projectDir" value=""/>
    <dirname property="antfile.dir" file="${ant.file}"/>
    

        
    
    <condition property="promptForFile">
        <equals arg1="${projectDir}" arg2=""/>
    </condition>
    
    
<!--  This is taken with thanks from:
      http://stackoverflow.com/questions/4696176/using-ant-how-do-i-open-a-file-in-a-browser -->
    <scriptdef name="open" language="javascript">
        <attribute name="file" />
        <![CDATA[
        var location = "file://"+attributes.get("file").toString().replaceAll("\\\\","/");
        location = java.net.URLEncoder.encode(location, "UTF-8");
        location = location.toString().replaceAll("%3A",":");
        location = location.toString().replaceAll("%2F","/");
        var uriLocation = java.net.URI.create(location);
        var desktop = java.awt.Desktop.getDesktop();
        desktop.browse(uriLocation);
    ]]>
    </scriptdef>
    
    <!--Documentation:
        property: user.input.string.dir
        input: user.input.string
        description:
        This takes in user.input.string from the
        user's input from the Oxygen editor variable
        user.input and translates it from a file
        to a path to a directory.
        -->
    
    <target name="setup" depends="convertForUnix, convertForWindows">
        <description>
            TARGET: setup
            This task creates a diagnostics directory in the projectFolder.
        </description>
           
        <echo message="Input: ${projectDir}"/>
        <echo message="Input after conversion: ${projectDirFull}"/>
        <echo message="Output dir: ${outputDir}"/>
        
        <fail message="Aborting. Directory selection was cancelled.">
            <condition>
                    <equals arg1="${projectDirFull}" arg2=""/>
            </condition>
        </fail>
        <fail message="Project directory not found. Please check input: ${projectDir}.">
            <condition>
                <not>
                    <available file="${projectDirFull}" type="dir"/>
                </not>
            </condition>
        </fail>
        
     
        
        <echo message="Executing diagnostics on directory ${projectDirFull}"/>
        <echo message="Creating diagnostics directory: ${outputDir}"/>
        <mkdir dir="${outputDir}"/>
    </target>

    
    <target name="runDiagnostics">
        <description>
            TARGET: runDiagnostics
            This task runs the diagnostics suite.
        </description>
        
        <echo message="${echo.separator}"/>
        
        <echo message="Creating diagnostics output for project: ${projectDirFull}"/>
       
        <echo message="Outputdir: ${outputDir}"/>
        <java classname="net.sf.saxon.Transform" classpath="utilities/saxon9he.jar">
            <arg value="-s:${antfile.dir}/xsl/diagnostics_master.xsl"/>
            <arg value="-xsl:${antfile.dir}/xsl/diagnostics_master.xsl"/> 
            <arg value="projectDirectory=${projectDirFull}"/>
            <arg value="outputDirectory=${outputDir}"/>
            <arg value="currDate=${date}"/>
            <arg value="--suppressXsltNamespaceCheck:on"/>
        </java>
    </target>
    
    <target name="convertForWindows" if="${isWindows}">
        <pathconvert property="projectDirFull" targetos="windows">
            <path path="${projectDir}"/>
            <identitymapper/>
        </pathconvert>
        <property name="outputDir" value="${projectDirFull}\diagnostics_${date}"/>
    </target>
    
    <target name="convertForUnix" if="${isUnix}">
        <pathconvert property="projectDirFull" targetos="unix">
            <path path="${projectDir}"/>
            <identitymapper/>
        </pathconvert>
        <property name="outputDir" value="${projectDirFull}/diagnostics_${date}"/>
    </target>
    
    <target name="getDirectory" if="${promptForFile}">
        <script language="javascript">
            <![CDATA[
                var chooser = new javax.swing.JFileChooser();
                chooser.setDialogTitle("Choose the directory containing your TEI files");
                chooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
                //chooser.setCurrentDirectory(new java.io.File("."));
                if (chooser.showOpenDialog(null) == javax.swing.JFileChooser.APPROVE_OPTION) { 
                    dir = chooser.getSelectedFile();
                	project.setProperty('projectDir', dir);
                }
                else{
                    project.setProperty('projectDir', '');
                }
            ]]>
        </script>
        <echo>You chose this directory: ${projectDir}.</echo>
    </target>
    
    <target name="open" depends="open.if.windows, open.if.unix">

        <open file="${diagnosticsFile}"/>
    </target>
    
    <target name="open.if.windows" if="${isWindows}">
        
       <property name="diagnosticsFile" value="${outputDir}\diagnostics.html"/>
        <echo message="Opening ${diagnosticsFile}"/>
    </target>
    
    <target name="open.if.unix" if="${isUnix}">
        <property name="diagnosticsFile" value="${outputDir}/diagnostics.html"/>
        <echo message="Opening ${diagnosticsFile}"/>
    </target>
    
    <target name="all" depends="getDirectory, setup, runDiagnostics, open">
        <description>
            TARGET: all
            This target is the default and runs all the build processes.
        </description>
        <!--<antcall target="getDirectory"/>
        <antcall target="setup"/>
        <antcall target="runDiagnostics"/>-->
    </target>
    
    <target name="moeml">
        <description>
            TARGET: moeml
            This is a test target which retrieves a useful set of 1700+ XML
            files from the Map of Early Modern London build server and 
            runs the diagnostics against the set. We use it to test speed
            on large collections, and also as part of ongoing quality 
            control on the MoEML project itself.
        </description>
        <echo message="${echo.separator}"/>
        <echo message="Retrieving the latest build of the MoEML Standard XML collection..."/>
        <delete dir="moeml"/>
        <mkdir dir="moeml"/>
        <get src="http://jenkins.hcmc.uvic.ca/job/MoEML/lastSuccessfulBuild/artifact/static/site/xml/standard/*zip*/standard.zip" dest="moeml/standard.zip" verbose="true"/>
        <unzip src="moeml/standard.zip" dest="moeml"/>
        <dirname property="moemlDirFull" file="moeml/standard.zip"/>
        <delete file="moeml/standard.zip"/>
        <antcall target="all">
            <param name="projectDir" value="moeml"/>
            <param name="projectDirFull" value="${moemlDirFull}"/>
        </antcall>
    </target>
</project>
